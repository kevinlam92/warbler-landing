{"ast":null,"code":"var _jsxFileName = \"/Users/kevin/workspace/don-website/src/components/Page.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport getTheme from 'theme';\nimport AOS from 'aos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const useDarkMode = () => {\n  _s();\n\n  const [themeMode, setTheme] = useState('light');\n  const [mountedComponent, setMountedComponent] = useState(false);\n\n  const setMode = mode => {\n    try {\n      window.localStorage.setItem('themeMode', mode);\n    } catch {\n      /* do nothing */\n    }\n\n    setTheme(mode);\n  };\n\n  const themeToggler = () => {\n    themeMode === 'light' ? setMode('dark') : setMode('light');\n  };\n\n  useEffect(() => {\n    try {\n      const localTheme = window.localStorage.getItem('themeMode');\n      localTheme ? setTheme(localTheme) : setMode('light');\n    } catch {\n      setMode('light');\n    }\n\n    setMountedComponent(true);\n  }, []);\n  return [themeMode, themeToggler, mountedComponent];\n};\n\n_s(useDarkMode, \"zTElNvKftvdD0Ok4R/cRtgIp0JI=\");\n\nexport default function Page(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  React.useEffect(() => {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n\n    AOS.init({\n      once: true,\n      delay: 0,\n      duration: 800,\n      offset: 0,\n      easing: 'ease-in-out'\n    });\n  }, []);\n  const [themeMode, themeToggler, mountedComponent] = useDarkMode();\n  useEffect(() => {\n    AOS.refresh();\n  }, [mountedComponent, themeMode]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: getTheme(themeMode, themeToggler),\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 0,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Page, \"vQybKlWDW76IgtYq0XQ7A9d3Hz8=\", false, function () {\n  return [useDarkMode];\n});\n\n_c = Page;\nPage.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["/Users/kevin/workspace/don-website/src/components/Page.js"],"names":["React","useState","useEffect","PropTypes","ThemeProvider","Paper","CssBaseline","getTheme","AOS","useDarkMode","themeMode","setTheme","mountedComponent","setMountedComponent","setMode","mode","window","localStorage","setItem","themeToggler","localTheme","getItem","Page","children","jssStyles","document","querySelector","parentElement","removeChild","init","once","delay","duration","offset","easing","refresh","propTypes","node","isRequired"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,QAAP,MAAqB,OAArB;AACA,OAAOC,GAAP,MAAgB,KAAhB;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBV,QAAQ,CAAC,OAAD,CAAtC;AACA,QAAM,CAACW,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,CAAC,KAAD,CAAxD;;AAEA,QAAMa,OAAO,GAAIC,IAAD,IAAU;AACxB,QAAI;AACFC,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,EAAyCH,IAAzC;AACD,KAFD,CAEE,MAAM;AACN;AACD;;AAEDJ,IAAAA,QAAQ,CAACI,IAAD,CAAR;AACD,GARD;;AAUA,QAAMI,YAAY,GAAG,MAAM;AACzBT,IAAAA,SAAS,KAAK,OAAd,GAAwBI,OAAO,CAAC,MAAD,CAA/B,GAA0CA,OAAO,CAAC,OAAD,CAAjD;AACD,GAFD;;AAIAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI;AACF,YAAMkB,UAAU,GAAGJ,MAAM,CAACC,YAAP,CAAoBI,OAApB,CAA4B,WAA5B,CAAnB;AACAD,MAAAA,UAAU,GAAGT,QAAQ,CAACS,UAAD,CAAX,GAA0BN,OAAO,CAAC,OAAD,CAA3C;AACD,KAHD,CAGE,MAAM;AACNA,MAAAA,OAAO,CAAC,OAAD,CAAP;AACD;;AAEDD,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,GATQ,EASN,EATM,CAAT;AAWA,SAAO,CAACH,SAAD,EAAYS,YAAZ,EAA0BP,gBAA1B,CAAP;AACD,CA9BM;;GAAMH,W;;AAgCb,eAAe,SAASa,IAAT,OAA4B;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACzCvB,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAM;AACpB;AACA,UAAMsB,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAlB;;AACA,QAAIF,SAAJ,EAAe;AACbA,MAAAA,SAAS,CAACG,aAAV,CAAwBC,WAAxB,CAAoCJ,SAApC;AACD;;AAEDhB,IAAAA,GAAG,CAACqB,IAAJ,CAAS;AACPC,MAAAA,IAAI,EAAE,IADC;AAEPC,MAAAA,KAAK,EAAE,CAFA;AAGPC,MAAAA,QAAQ,EAAE,GAHH;AAIPC,MAAAA,MAAM,EAAE,CAJD;AAKPC,MAAAA,MAAM,EAAE;AALD,KAAT;AAOD,GAdD,EAcG,EAdH;AAgBA,QAAM,CAACxB,SAAD,EAAYS,YAAZ,EAA0BP,gBAA1B,IAA8CH,WAAW,EAA/D;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,GAAG,CAAC2B,OAAJ;AACD,GAFQ,EAEN,CAACvB,gBAAD,EAAmBF,SAAnB,CAFM,CAAT;AAIA,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEH,QAAQ,CAACG,SAAD,EAAYS,YAAZ,CAA9B;AAAA,4BAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAE,CAAlB;AAAA,gBAAsBI;AAAtB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;IA9BuBD,I;UAiB8Bb,W;;;KAjB9Ba,I;AAgCxBA,IAAI,CAACc,SAAL,GAAiB;AACfb,EAAAA,QAAQ,EAAEpB,SAAS,CAACkC,IAAV,CAAeC;AADV,CAAjB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport getTheme from 'theme';\nimport AOS from 'aos';\n\nexport const useDarkMode = () => {\n  const [themeMode, setTheme] = useState('light');\n  const [mountedComponent, setMountedComponent] = useState(false);\n\n  const setMode = (mode) => {\n    try {\n      window.localStorage.setItem('themeMode', mode);\n    } catch {\n      /* do nothing */\n    }\n\n    setTheme(mode);\n  };\n\n  const themeToggler = () => {\n    themeMode === 'light' ? setMode('dark') : setMode('light');\n  };\n\n  useEffect(() => {\n    try {\n      const localTheme = window.localStorage.getItem('themeMode');\n      localTheme ? setTheme(localTheme) : setMode('light');\n    } catch {\n      setMode('light');\n    }\n\n    setMountedComponent(true);\n  }, []);\n\n  return [themeMode, themeToggler, mountedComponent];\n};\n\nexport default function Page({ children }) {\n  React.useEffect(() => {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector('#jss-server-side');\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n\n    AOS.init({\n      once: true,\n      delay: 0,\n      duration: 800,\n      offset: 0,\n      easing: 'ease-in-out',\n    });\n  }, []);\n\n  const [themeMode, themeToggler, mountedComponent] = useDarkMode();\n\n  useEffect(() => {\n    AOS.refresh();\n  }, [mountedComponent, themeMode]);\n\n  return (\n    <ThemeProvider theme={getTheme(themeMode, themeToggler)}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <Paper elevation={0}>{children}</Paper>\n    </ThemeProvider>\n  );\n}\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}