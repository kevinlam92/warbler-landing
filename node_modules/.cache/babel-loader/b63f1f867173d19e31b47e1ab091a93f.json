{"ast":null,"code":"/* eslint no-case-declarations: \"off\" */\nimport global from 'global';\nexport default function jarallaxElement() {\n  let jarallax = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : global.jarallax;\n\n  if ('undefined' === typeof jarallax) {\n    return;\n  }\n\n  const Jarallax = jarallax.constructor; // redefine default methods\n\n  ['initImg', 'canInitParallax', 'init', 'destroy', 'clipContainer', 'coverImage', 'isVisible', 'onScroll', 'onResize'].forEach(key => {\n    const def = Jarallax.prototype[key];\n\n    Jarallax.prototype[key] = function () {\n      const self = this;\n\n      if ('initImg' === key && null !== self.$item.getAttribute('data-jarallax-element')) {\n        self.options.type = 'element';\n        self.pureOptions.speed = self.$item.getAttribute('data-jarallax-element') || self.pureOptions.speed;\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      if ('element' !== self.options.type) {\n        return def.apply(self, args);\n      }\n\n      self.pureOptions.threshold = self.$item.getAttribute('data-threshold') || '';\n\n      switch (key) {\n        case 'init':\n          const speedArr = self.pureOptions.speed.split(' ');\n          self.options.speed = self.pureOptions.speed || 0;\n          self.options.speedY = speedArr[0] ? parseFloat(speedArr[0]) : 0;\n          self.options.speedX = speedArr[1] ? parseFloat(speedArr[1]) : 0;\n          const thresholdArr = self.pureOptions.threshold.split(' ');\n          self.options.thresholdY = thresholdArr[0] ? parseFloat(thresholdArr[0]) : null;\n          self.options.thresholdX = thresholdArr[1] ? parseFloat(thresholdArr[1]) : null;\n          def.apply(self, args); // restore background image if available.\n\n          const originalStylesTag = self.$item.getAttribute('data-jarallax-original-styles');\n\n          if (originalStylesTag) {\n            self.$item.setAttribute('style', originalStylesTag);\n          }\n\n          return true;\n\n        case 'onResize':\n          const defTransform = self.css(self.$item, 'transform');\n          self.css(self.$item, {\n            transform: ''\n          });\n          const rect = self.$item.getBoundingClientRect();\n          self.itemData = {\n            width: rect.width,\n            height: rect.height,\n            y: rect.top + self.getWindowData().y,\n            x: rect.left\n          };\n          self.css(self.$item, {\n            transform: defTransform\n          });\n          break;\n\n        case 'onScroll':\n          const wnd = self.getWindowData();\n          const centerPercent = (wnd.y + wnd.height / 2 - self.itemData.y - self.itemData.height / 2) / (wnd.height / 2);\n          const moveY = centerPercent * self.options.speedY;\n          const moveX = centerPercent * self.options.speedX;\n          let my = moveY;\n          let mx = moveX;\n          if (null !== self.options.thresholdY && moveY > self.options.thresholdY) my = 0;\n          if (null !== self.options.thresholdX && moveX > self.options.thresholdX) mx = 0;\n          self.css(self.$item, {\n            transform: `translate3d(${mx}px,${my}px,0)`\n          });\n          break;\n\n        case 'initImg':\n        case 'isVisible':\n        case 'clipContainer':\n        case 'coverImage':\n          return true;\n        // no default\n      }\n\n      return def.apply(self, args);\n    };\n  });\n}","map":{"version":3,"sources":["/Users/kevin/workspace/don-website/node_modules/jarallax/src/jarallax-element.esm.js"],"names":["global","jarallaxElement","jarallax","Jarallax","constructor","forEach","key","def","prototype","self","$item","getAttribute","options","type","pureOptions","speed","args","apply","threshold","speedArr","split","speedY","parseFloat","speedX","thresholdArr","thresholdY","thresholdX","originalStylesTag","setAttribute","defTransform","css","transform","rect","getBoundingClientRect","itemData","width","height","y","top","getWindowData","x","left","wnd","centerPercent","moveY","moveX","my","mx"],"mappings":"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","sourcesContent":["/* eslint no-case-declarations: \"off\" */\nimport global from 'global';\n\nexport default function jarallaxElement( jarallax = global.jarallax ) {\n    if ( 'undefined' === typeof jarallax ) {\n        return;\n    }\n\n    const Jarallax = jarallax.constructor;\n\n    // redefine default methods\n    [\n        'initImg',\n        'canInitParallax',\n        'init',\n        'destroy',\n        'clipContainer',\n        'coverImage',\n        'isVisible',\n        'onScroll',\n        'onResize',\n    ].forEach( ( key ) => {\n        const def = Jarallax.prototype[ key ];\n        Jarallax.prototype[ key ] = function( ...args ) {\n            const self = this;\n\n            if ( 'initImg' === key && null !== self.$item.getAttribute( 'data-jarallax-element' ) ) {\n                self.options.type = 'element';\n                self.pureOptions.speed = self.$item.getAttribute( 'data-jarallax-element' ) || self.pureOptions.speed;\n            }\n            if ( 'element' !== self.options.type ) {\n                return def.apply( self, args );\n            }\n\n            self.pureOptions.threshold = self.$item.getAttribute( 'data-threshold' ) || '';\n\n            switch ( key ) {\n            case 'init':\n                const speedArr = self.pureOptions.speed.split( ' ' );\n                self.options.speed = self.pureOptions.speed || 0;\n                self.options.speedY = speedArr[ 0 ] ? parseFloat( speedArr[ 0 ] ) : 0;\n                self.options.speedX = speedArr[ 1 ] ? parseFloat( speedArr[ 1 ] ) : 0;\n\n                const thresholdArr = self.pureOptions.threshold.split( ' ' );\n                self.options.thresholdY = thresholdArr[ 0 ] ? parseFloat( thresholdArr[ 0 ] ) : null;\n                self.options.thresholdX = thresholdArr[ 1 ] ? parseFloat( thresholdArr[ 1 ] ) : null;\n\n                def.apply( self, args );\n\n                // restore background image if available.\n                const originalStylesTag = self.$item.getAttribute( 'data-jarallax-original-styles' );\n                if ( originalStylesTag ) {\n                    self.$item.setAttribute( 'style', originalStylesTag );\n                }\n\n                return true;\n            case 'onResize':\n                const defTransform = self.css( self.$item, 'transform' );\n                self.css( self.$item, { transform: '' } );\n                const rect = self.$item.getBoundingClientRect();\n                self.itemData = {\n                    width: rect.width,\n                    height: rect.height,\n                    y: rect.top + self.getWindowData().y,\n                    x: rect.left,\n                };\n                self.css( self.$item, { transform: defTransform } );\n                break;\n            case 'onScroll':\n                const wnd = self.getWindowData();\n                const centerPercent = ( wnd.y + wnd.height / 2 - self.itemData.y - self.itemData.height / 2 ) / ( wnd.height / 2 );\n                const moveY = centerPercent * self.options.speedY;\n                const moveX = centerPercent * self.options.speedX;\n                let my = moveY;\n                let mx = moveX;\n                if ( null !== self.options.thresholdY && moveY > self.options.thresholdY ) my = 0;\n                if ( null !== self.options.thresholdX && moveX > self.options.thresholdX ) mx = 0;\n                self.css( self.$item, { transform: `translate3d(${ mx }px,${ my }px,0)` } );\n                break;\n            case 'initImg':\n            case 'isVisible':\n            case 'clipContainer':\n            case 'coverImage':\n                return true;\n            // no default\n            }\n            return def.apply( self, args );\n        };\n    } );\n}\n"]},"metadata":{},"sourceType":"module"}