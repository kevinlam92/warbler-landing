{"ast":null,"code":"var _jsxFileName = \"/Users/kevin/workspace/don-website/src/layouts/Main/components/Topbar/components/NavItem/NavItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport { alpha, useTheme } from '@mui/material/styles';\nimport Popover from '@mui/material/Popover';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavItem = _ref => {\n  _s();\n\n  let {\n    title,\n    id,\n    items,\n    colorInvert = false\n  } = _ref;\n  const theme = useTheme();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [openedPopoverId, setOpenedPopoverId] = useState(null);\n\n  const handleClick = (event, popoverId) => {\n    setAnchorEl(event.target);\n    setOpenedPopoverId(popoverId);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n    setOpenedPopoverId(null);\n  };\n\n  const [activeLink, setActiveLink] = useState('');\n  useEffect(() => {\n    setActiveLink(window && window.location ? window.location.pathname : '');\n  }, []);\n\n  const hasActiveLink = () => items.find(i => i.href === activeLink);\n\n  const linkColor = colorInvert ? 'common.white' : 'text.primary';\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: 'flex',\n      alignItems: 'center',\n      \"aria-describedby\": id,\n      sx: {\n        cursor: 'pointer'\n      },\n      onClick: e => handleClick(e, id),\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        fontWeight: openedPopoverId === id || hasActiveLink() ? 700 : 400,\n        color: linkColor,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {\n        sx: {\n          marginLeft: theme.spacing(1 / 4),\n          width: 16,\n          height: 16,\n          transform: openedPopoverId === id ? 'rotate(180deg)' : 'none',\n          color: linkColor\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      elevation: 3,\n      id: id,\n      open: openedPopoverId === id,\n      anchorEl: anchorEl,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      sx: {\n        '.MuiPaper-root': {\n          maxWidth: items.length > 12 ? 350 : 250,\n          padding: 2,\n          marginTop: 2,\n          borderTopRightRadius: 0,\n          borderTopLeftRadius: 0,\n          borderBottomRightRadius: 8,\n          borderBottomLeftRadius: 8,\n          borderTop: `3px solid ${theme.palette.primary.main}`\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 0.5,\n        children: items.map((p, i) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: items.length > 12 ? 6 : 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            component: 'a',\n            href: p.href,\n            fullWidth: true,\n            sx: {\n              justifyContent: 'flex-start',\n              color: activeLink === p.href ? theme.palette.primary.main : theme.palette.text.primary,\n              backgroundColor: activeLink === p.href ? alpha(theme.palette.primary.main, 0.1) : 'transparent',\n              fontWeight: activeLink === p.href ? 600 : 400\n            },\n            children: [p.title, p.isNew && /*#__PURE__*/_jsxDEV(Box, {\n              padding: 0.5,\n              display: 'inline-flex',\n              borderRadius: 1,\n              bgcolor: 'primary.main',\n              marginLeft: 2,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: 'caption',\n                sx: {\n                  color: 'common.white',\n                  lineHeight: 1\n                },\n                children: \"new\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NavItem, \"SVbsgUQx/4DUxJqI6VY9RV8CW2k=\", false, function () {\n  return [useTheme];\n});\n\n_c = NavItem;\nNavItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  items: PropTypes.array.isRequired,\n  colorInvert: PropTypes.bool\n};\nexport default NavItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavItem\");","map":{"version":3,"sources":["/Users/kevin/workspace/don-website/src/layouts/Main/components/Topbar/components/NavItem/NavItem.js"],"names":["React","useState","useEffect","PropTypes","Box","Button","alpha","useTheme","Popover","Typography","Grid","ExpandMoreIcon","NavItem","title","id","items","colorInvert","theme","anchorEl","setAnchorEl","openedPopoverId","setOpenedPopoverId","handleClick","event","popoverId","target","handleClose","activeLink","setActiveLink","window","location","pathname","hasActiveLink","find","i","href","linkColor","cursor","e","marginLeft","spacing","width","height","transform","color","vertical","horizontal","maxWidth","length","padding","marginTop","borderTopRightRadius","borderTopLeftRadius","borderBottomRightRadius","borderBottomLeftRadius","borderTop","palette","primary","main","map","p","justifyContent","text","backgroundColor","fontWeight","isNew","lineHeight","propTypes","string","isRequired","array","bool"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport { alpha, useTheme } from '@mui/material/styles';\nimport Popover from '@mui/material/Popover';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nconst NavItem = ({ title, id, items, colorInvert = false }) => {\n  const theme = useTheme();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [openedPopoverId, setOpenedPopoverId] = useState(null);\n\n  const handleClick = (event, popoverId) => {\n    setAnchorEl(event.target);\n    setOpenedPopoverId(popoverId);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n    setOpenedPopoverId(null);\n  };\n\n  const [activeLink, setActiveLink] = useState('');\n  useEffect(() => {\n    setActiveLink(window && window.location ? window.location.pathname : '');\n  }, []);\n\n  const hasActiveLink = () => items.find((i) => i.href === activeLink);\n  const linkColor = colorInvert ? 'common.white' : 'text.primary';\n\n  return (\n    <Box>\n      <Box\n        display={'flex'}\n        alignItems={'center'}\n        aria-describedby={id}\n        sx={{ cursor: 'pointer' }}\n        onClick={(e) => handleClick(e, id)}\n      >\n        <Typography\n          fontWeight={openedPopoverId === id || hasActiveLink() ? 700 : 400}\n          color={linkColor}\n        >\n          {title}\n        </Typography>\n        <ExpandMoreIcon\n          sx={{\n            marginLeft: theme.spacing(1 / 4),\n            width: 16,\n            height: 16,\n            transform: openedPopoverId === id ? 'rotate(180deg)' : 'none',\n            color: linkColor,\n          }}\n        />\n      </Box>\n      <Popover\n        elevation={3}\n        id={id}\n        open={openedPopoverId === id}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n        sx={{\n          '.MuiPaper-root': {\n            maxWidth: items.length > 12 ? 350 : 250,\n            padding: 2,\n            marginTop: 2,\n            borderTopRightRadius: 0,\n            borderTopLeftRadius: 0,\n            borderBottomRightRadius: 8,\n            borderBottomLeftRadius: 8,\n            borderTop: `3px solid ${theme.palette.primary.main}`,\n          },\n        }}\n      >\n        <Grid container spacing={0.5}>\n          {items.map((p, i) => (\n            <Grid item key={i} xs={items.length > 12 ? 6 : 12}>\n              <Button\n                component={'a'}\n                href={p.href}\n                fullWidth\n                sx={{\n                  justifyContent: 'flex-start',\n                  color:\n                    activeLink === p.href\n                      ? theme.palette.primary.main\n                      : theme.palette.text.primary,\n                  backgroundColor:\n                    activeLink === p.href\n                      ? alpha(theme.palette.primary.main, 0.1)\n                      : 'transparent',\n                  fontWeight: activeLink === p.href ? 600 : 400,\n                }}\n              >\n                {p.title}\n                {p.isNew && (\n                  <Box\n                    padding={0.5}\n                    display={'inline-flex'}\n                    borderRadius={1}\n                    bgcolor={'primary.main'}\n                    marginLeft={2}\n                  >\n                    <Typography\n                      variant={'caption'}\n                      sx={{ color: 'common.white', lineHeight: 1 }}\n                    >\n                      new\n                    </Typography>\n                  </Box>\n                )}\n              </Button>\n            </Grid>\n          ))}\n        </Grid>\n      </Popover>\n    </Box>\n  );\n};\n\nNavItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  items: PropTypes.array.isRequired,\n  colorInvert: PropTypes.bool,\n};\n\nexport default NavItem;\n"]},"metadata":{},"sourceType":"module"}